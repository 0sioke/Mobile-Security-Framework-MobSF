# -*- coding: utf_8 -*-
import logging
import os

from django.conf import settings

logger = logging.getLogger(__name__)


def quark_analysis(app_dir, apk_file, apk_name):
    """QUARK Analysis of APK files."""
    if not getattr(settings, 'QUARK_ENABLED', True):
        return {}
    try:
        import quark
    except ImportError:
        logger.error('Quark - Could not import Quark')
        return {}
    if not os.path.exists(apk_file):
        logger.error('Quark - APK not found')
        return {}

    quark_ver = quark.__version__

    from quark import config
    from quark.freshquark import download
    from quark.Objects.quark import Quark
    from quark.Objects.quarkrule import QuarkRule

    logger.info('Running Quark %s', quark_ver)

    # freshquark: update quark rules
    download()

    # default rules path
    rule = f"{config.HOME_DIR}quark-rules"

    # Load APK
    data = Quark(apk_file)

    # Load rules
    rules_list = [file for file in os.listdir(rule) if file.endswith("json")]

    for single_rule in rules_list:
        rulepath = os.path.join(rule, single_rule)
        rule_checker = QuarkRule(rulepath)

        # Run the checker
        data.run(rule_checker)

        data.generate_json_report(rule_checker)

    return data.get_json_report()
